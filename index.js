const { readHardware } = require('./core/hardwareReader');
const { recommendUpgrades } = require('./core/recommender');

function printHardwareInfo(hardware, recommendations) {
  console.log('üîç Detectando informa√ß√µes de hardware...\n');

  console.log(`üñ•Ô∏è Sistema operacional: ${hardware.os}`);
  console.log(`üíª Arquitetura: ${hardware.arch}\n`);

  // Como hardware.cpu e hardware.gpu s√£o objetos, formatamos para string
  console.log(`üß† CPU detectada: ${hardware.cpu.name || 'N√£o detectada'}`);
  console.log(`üéÆ GPU detectada: ${hardware.gpu.name || 'N√£o detectada'}`);
  console.log(`üíæ Mem√≥ria detectada: ${hardware.ram.amountGB} GB (${hardware.ram.type})\n`);

  console.log('‚öôÔ∏è Recomenda√ß√µes Gerais:\n');

  const cpuRec = recommendations.find(r => r.toLowerCase().includes('cpu'));
  const gpuRec = recommendations.find(r => r.toLowerCase().includes('gpu'));
  const ramRec = recommendations.find(r => r.toLowerCase().includes('mem√≥ria') || r.toLowerCase().includes('ram'));

  console.log('üîß CPU:');
  console.log(cpuRec ? `  - ${cpuRec}` : '  - Nenhuma sugest√£o de upgrade para CPU.\n');

  console.log('\nüñ•Ô∏è GPU:');
  console.log(gpuRec ? `  - ${gpuRec}` : '  - Nenhuma sugest√£o de upgrade para GPU.\n');

  console.log('\nüíæ Mem√≥ria:');
  console.log(ramRec ? `  - ${ramRec}` : '  - Nenhuma sugest√£o de upgrade para mem√≥ria.\n');

  console.log('\n---');
}

async function main() {
  try {
    const hardware = await readHardware();

    // Recebe as recomenda√ß√µes com base no hardware
    const recommendations = recommendUpgrades(hardware);

    printHardwareInfo(hardware, recommendations);
  } catch (error) {
    console.error('‚ùå Erro ao executar:', error);
  }
}

main();